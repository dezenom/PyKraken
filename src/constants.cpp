#include "Constants.hpp"
#include "_globals.hpp"

#include <SDL3/SDL.h>
#include <pybind11/native_enum.h>
#include <unordered_map>

void constants::_bind(py::module_& module)
{
    // Define Anchor enum
    py::native_enum<Anchor>(module, "Anchor", "enum.IntEnum")
        .value("TOP_LEFT", Anchor::TOP_LEFT)
        .value("TOP_MID", Anchor::TOP_MID)
        .value("TOP_RIGHT", Anchor::TOP_RIGHT)
        .value("MID_LEFT", Anchor::MID_LEFT)
        .value("CENTER", Anchor::CENTER)
        .value("MID_RIGHT", Anchor::MID_RIGHT)
        .value("BOTTOM_LEFT", Anchor::BOTTOM_LEFT)
        .value("BOTTOM_MID", Anchor::BOTTOM_MID)
        .value("BOTTOM_RIGHT", Anchor::BOTTOM_RIGHT)
        .export_values()
        .finalize();

    // Define event types
    py::native_enum<SDL_EventType>(module, "EventType", "enum.IntEnum")
        .value("QUIT", SDL_EVENT_QUIT)
        .value("WINDOW_SHOWN", SDL_EVENT_WINDOW_SHOWN)
        .value("WINDOW_HIDDEN", SDL_EVENT_WINDOW_HIDDEN)
        .value("WINDOW_EXPOSED", SDL_EVENT_WINDOW_EXPOSED)
        .value("WINDOW_MOVED", SDL_EVENT_WINDOW_MOVED)
        .value("WINDOW_RESIZED", SDL_EVENT_WINDOW_RESIZED)
        .value("WINDOW_MINIMIZED", SDL_EVENT_WINDOW_MINIMIZED)
        .value("WINDOW_MAXIMIZED", SDL_EVENT_WINDOW_MAXIMIZED)
        .value("WINDOW_RESTORED", SDL_EVENT_WINDOW_RESTORED)
        .value("WINDOW_MOUSE_ENTER", SDL_EVENT_WINDOW_MOUSE_ENTER)
        .value("WINDOW_MOUSE_LEAVE", SDL_EVENT_WINDOW_MOUSE_LEAVE)
        .value("WINDOW_FOCUS_GAINED", SDL_EVENT_WINDOW_FOCUS_GAINED)
        .value("WINDOW_FOCUS_LOST", SDL_EVENT_WINDOW_FOCUS_LOST)
        .value("WINDOW_OCCLUDED", SDL_EVENT_WINDOW_OCCLUDED)
        .value("WINDOW_ENTER_FULLSCREEN", SDL_EVENT_WINDOW_ENTER_FULLSCREEN)
        .value("WINDOW_LEAVE_FULLSCREEN", SDL_EVENT_WINDOW_LEAVE_FULLSCREEN)
        .value("KEY_DOWN", SDL_EVENT_KEY_DOWN)
        .value("KEY_UP", SDL_EVENT_KEY_UP)
        .value("TEXT_EDITING", SDL_EVENT_TEXT_EDITING)
        .value("TEXT_INPUT", SDL_EVENT_TEXT_INPUT)
        .value("KEYBOARD_ADDED", SDL_EVENT_KEYBOARD_ADDED)
        .value("KEYBOARD_REMOVED", SDL_EVENT_KEYBOARD_REMOVED)
        .value("MOUSE_MOTION", SDL_EVENT_MOUSE_MOTION)
        .value("MOUSE_BUTTON_DOWN", SDL_EVENT_MOUSE_BUTTON_DOWN)
        .value("MOUSE_BUTTON_UP", SDL_EVENT_MOUSE_BUTTON_UP)
        .value("MOUSE_WHEEL", SDL_EVENT_MOUSE_WHEEL)
        .value("MOUSE_ADDED", SDL_EVENT_MOUSE_ADDED)
        .value("MOUSE_REMOVED", SDL_EVENT_MOUSE_REMOVED)
        .value("GAMEPAD_AXIS_MOTION", SDL_EVENT_GAMEPAD_AXIS_MOTION)
        .value("GAMEPAD_BUTTON_DOWN", SDL_EVENT_GAMEPAD_BUTTON_DOWN)
        .value("GAMEPAD_BUTTON_UP", SDL_EVENT_GAMEPAD_BUTTON_UP)
        .value("GAMEPAD_ADDED", SDL_EVENT_GAMEPAD_ADDED)
        .value("GAMEPAD_REMOVED", SDL_EVENT_GAMEPAD_REMOVED)
        .value("GAMEPAD_TOUCHPAD_DOWN", SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN)
        .value("GAMEPAD_TOUCHPAD_MOTION", SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION)
        .value("GAMEPAD_TOUCHPAD_UP", SDL_EVENT_GAMEPAD_TOUCHPAD_UP)
        .value("DROP_FILE", SDL_EVENT_DROP_FILE)
        .value("DROP_TEXT", SDL_EVENT_DROP_TEXT)
        .value("DROP_BEGIN", SDL_EVENT_DROP_BEGIN)
        .value("DROP_COMPLETE", SDL_EVENT_DROP_COMPLETE)
        .value("DROP_POSITION", SDL_EVENT_DROP_POSITION)
        .value("AUDIO_DEVICE_ADDED", SDL_EVENT_AUDIO_DEVICE_ADDED)
        .value("AUDIO_DEVICE_REMOVED", SDL_EVENT_AUDIO_DEVICE_REMOVED)
        .value("PEN_PROXIMITY_IN", SDL_EVENT_PEN_PROXIMITY_IN)
        .value("PEN_PROXIMITY_OUT", SDL_EVENT_PEN_PROXIMITY_OUT)
        .value("PEN_DOWN", SDL_EVENT_PEN_DOWN)
        .value("PEN_UP", SDL_EVENT_PEN_UP)
        .value("PEN_BUTTON_DOWN", SDL_EVENT_PEN_BUTTON_DOWN)
        .value("PEN_BUTTON_UP", SDL_EVENT_PEN_BUTTON_UP)
        .value("PEN_MOTION", SDL_EVENT_PEN_MOTION)
        .value("PEN_AXIS", SDL_EVENT_PEN_AXIS)
        .value("CAMERA_ADDED", SDL_EVENT_CAMERA_DEVICE_ADDED)
        .value("CAMERA_REMOVED", SDL_EVENT_CAMERA_DEVICE_REMOVED)
        .value("CAMERA_APPROVED", SDL_EVENT_CAMERA_DEVICE_APPROVED)
        .value("CAMERA_DENIED", SDL_EVENT_CAMERA_DEVICE_DENIED)
        .export_values()
        .finalize();

    // Mouse buttons
    py::native_enum<knMouseButton>(module, "MouseButton", "enum.IntEnum")
        .value("M_LEFT", knMouseButton::M_LEFT)
        .value("M_MIDDLE", knMouseButton::M_MIDDLE)
        .value("M_RIGHT", knMouseButton::M_RIGHT)
        .value("M_SIDE1", knMouseButton::M_SIDE1)
        .value("M_SIDE2", knMouseButton::M_SIDE2)
        .export_values()
        .finalize();

    // Scancodes
    py::native_enum<SDL_Scancode>(module, "Scancode", "enum.IntEnum")
        .value("S_a", SDL_SCANCODE_A)
        .value("S_b", SDL_SCANCODE_B)
        .value("S_c", SDL_SCANCODE_C)
        .value("S_d", SDL_SCANCODE_D)
        .value("S_e", SDL_SCANCODE_E)
        .value("S_f", SDL_SCANCODE_F)
        .value("S_g", SDL_SCANCODE_G)
        .value("S_h", SDL_SCANCODE_H)
        .value("S_i", SDL_SCANCODE_I)
        .value("S_j", SDL_SCANCODE_J)
        .value("S_k", SDL_SCANCODE_K)
        .value("S_l", SDL_SCANCODE_L)
        .value("S_m", SDL_SCANCODE_M)
        .value("S_n", SDL_SCANCODE_N)
        .value("S_o", SDL_SCANCODE_O)
        .value("S_p", SDL_SCANCODE_P)
        .value("S_q", SDL_SCANCODE_Q)
        .value("S_r", SDL_SCANCODE_R)
        .value("S_s", SDL_SCANCODE_S)
        .value("S_t", SDL_SCANCODE_T)
        .value("S_u", SDL_SCANCODE_U)
        .value("S_v", SDL_SCANCODE_V)
        .value("S_w", SDL_SCANCODE_W)
        .value("S_x", SDL_SCANCODE_X)
        .value("S_y", SDL_SCANCODE_Y)
        .value("S_z", SDL_SCANCODE_Z)
        .value("S_1", SDL_SCANCODE_1)
        .value("S_2", SDL_SCANCODE_2)
        .value("S_3", SDL_SCANCODE_3)
        .value("S_4", SDL_SCANCODE_4)
        .value("S_5", SDL_SCANCODE_5)
        .value("S_6", SDL_SCANCODE_6)
        .value("S_7", SDL_SCANCODE_7)
        .value("S_8", SDL_SCANCODE_8)
        .value("S_9", SDL_SCANCODE_9)
        .value("S_0", SDL_SCANCODE_0)
        .value("S_RETURN", SDL_SCANCODE_RETURN)
        .value("S_ESC", SDL_SCANCODE_ESCAPE)
        .value("S_BACKSPACE", SDL_SCANCODE_BACKSPACE)
        .value("S_TAB", SDL_SCANCODE_TAB)
        .value("S_SPACE", SDL_SCANCODE_SPACE)
        .value("S_MINUS", SDL_SCANCODE_MINUS)
        .value("S_EQ", SDL_SCANCODE_EQUALS)
        .value("S_LBRACKET", SDL_SCANCODE_LEFTBRACKET)
        .value("S_RBRACKET", SDL_SCANCODE_RIGHTBRACKET)
        .value("S_BACKSLASH", SDL_SCANCODE_BACKSLASH)
        .value("S_SEMICOLON", SDL_SCANCODE_SEMICOLON)
        .value("S_APOSTROPHE", SDL_SCANCODE_APOSTROPHE)
        .value("S_GRAVE", SDL_SCANCODE_GRAVE)
        .value("S_COMMA", SDL_SCANCODE_COMMA)
        .value("S_PERIOD", SDL_SCANCODE_PERIOD)
        .value("S_SLASH", SDL_SCANCODE_SLASH)
        .value("S_CAPS", SDL_SCANCODE_CAPSLOCK)
        .value("S_F1", SDL_SCANCODE_F1)
        .value("S_F2", SDL_SCANCODE_F2)
        .value("S_F3", SDL_SCANCODE_F3)
        .value("S_F4", SDL_SCANCODE_F4)
        .value("S_F5", SDL_SCANCODE_F5)
        .value("S_F6", SDL_SCANCODE_F6)
        .value("S_F7", SDL_SCANCODE_F7)
        .value("S_F8", SDL_SCANCODE_F8)
        .value("S_F9", SDL_SCANCODE_F9)
        .value("S_F10", SDL_SCANCODE_F10)
        .value("S_F11", SDL_SCANCODE_F11)
        .value("S_F12", SDL_SCANCODE_F12)
        .value("S_PRTSCR", SDL_SCANCODE_PRINTSCREEN)
        .value("S_SCRLK", SDL_SCANCODE_SCROLLLOCK)
        .value("S_PAUSE", SDL_SCANCODE_PAUSE)
        .value("S_INS", SDL_SCANCODE_INSERT)
        .value("S_HOME", SDL_SCANCODE_HOME)
        .value("S_PGUP", SDL_SCANCODE_PAGEUP)
        .value("S_DEL", SDL_SCANCODE_DELETE)
        .value("S_END", SDL_SCANCODE_END)
        .value("S_PGDOWN", SDL_SCANCODE_PAGEDOWN)
        .value("S_RIGHT", SDL_SCANCODE_RIGHT)
        .value("S_LEFT", SDL_SCANCODE_LEFT)
        .value("S_DOWN", SDL_SCANCODE_DOWN)
        .value("S_UP", SDL_SCANCODE_UP)
        .value("S_NUMLOCK", SDL_SCANCODE_NUMLOCKCLEAR)
        .value("S_KP_DIV", SDL_SCANCODE_KP_DIVIDE)
        .value("S_KP_MULT", SDL_SCANCODE_KP_MULTIPLY)
        .value("S_KP_MINUS", SDL_SCANCODE_KP_MINUS)
        .value("S_KP_PLUS", SDL_SCANCODE_KP_PLUS)
        .value("S_KP_ENTER", SDL_SCANCODE_KP_ENTER)
        .value("S_KP_1", SDL_SCANCODE_KP_1)
        .value("S_KP_2", SDL_SCANCODE_KP_2)
        .value("S_KP_3", SDL_SCANCODE_KP_3)
        .value("S_KP_4", SDL_SCANCODE_KP_4)
        .value("S_KP_5", SDL_SCANCODE_KP_5)
        .value("S_KP_6", SDL_SCANCODE_KP_6)
        .value("S_KP_7", SDL_SCANCODE_KP_7)
        .value("S_KP_8", SDL_SCANCODE_KP_8)
        .value("S_KP_9", SDL_SCANCODE_KP_9)
        .value("S_KP_0", SDL_SCANCODE_KP_0)
        .value("S_KP_PERIOD", SDL_SCANCODE_KP_PERIOD)
        .value("S_AGAIN", SDL_SCANCODE_AGAIN)
        .value("S_UNDO", SDL_SCANCODE_UNDO)
        .value("S_CUT", SDL_SCANCODE_CUT)
        .value("S_COPY", SDL_SCANCODE_COPY)
        .value("S_PASTE", SDL_SCANCODE_PASTE)
        .value("S_FIND", SDL_SCANCODE_FIND)
        .value("S_MUTE", SDL_SCANCODE_MUTE)
        .value("S_VOLUP", SDL_SCANCODE_VOLUMEUP)
        .value("S_VOLDOWN", SDL_SCANCODE_VOLUMEDOWN)
        .value("S_LCTRL", SDL_SCANCODE_LCTRL)
        .value("S_LSHIFT", SDL_SCANCODE_LSHIFT)
        .value("S_LALT", SDL_SCANCODE_LALT)
        .value("S_LGUI", SDL_SCANCODE_LGUI)
        .value("S_RCTRL", SDL_SCANCODE_RCTRL)
        .value("S_RSHIFT", SDL_SCANCODE_RSHIFT)
        .value("S_RALT", SDL_SCANCODE_RALT)
        .value("S_RGUI", SDL_SCANCODE_RGUI)
        .export_values()
        .finalize();

    // Keycodes
    py::native_enum<KnKeycode>(module, "Keycode", "enum.IntEnum")
        .value("K_BACKSPACE", KnKeycode::K_BACKSPACE)
        .value("K_TAB", KnKeycode::K_TAB)
        .value("K_RETURN", KnKeycode::K_RETURN)
        .value("K_ESC", KnKeycode::K_ESC)
        .value("K_SPACE", KnKeycode::K_SPACE)
        .value("K_EXCLAIM", KnKeycode::K_EXCLAIM)
        .value("K_DBLQUOTE", KnKeycode::K_DBLQUOTE)
        .value("K_HASH", KnKeycode::K_HASH)
        .value("K_DOLLAR", KnKeycode::K_DOLLAR)
        .value("K_PERCENT", KnKeycode::K_PERCENT)
        .value("K_AMPERSAND", KnKeycode::K_AMPERSAND)
        .value("K_SGLQUOTE", KnKeycode::K_SGLQUOTE)
        .value("K_ASTERISK", KnKeycode::K_ASTERISK)
        .value("K_PLUS", KnKeycode::K_PLUS)
        .value("K_COMMA", KnKeycode::K_COMMA)
        .value("K_MINUS", KnKeycode::K_MINUS)
        .value("K_PERIOD", KnKeycode::K_PERIOD)
        .value("K_SLASH", KnKeycode::K_SLASH)
        .value("K_0", KnKeycode::K_0)
        .value("K_1", KnKeycode::K_1)
        .value("K_2", KnKeycode::K_2)
        .value("K_3", KnKeycode::K_3)
        .value("K_4", KnKeycode::K_4)
        .value("K_5", KnKeycode::K_5)
        .value("K_6", KnKeycode::K_6)
        .value("K_7", KnKeycode::K_7)
        .value("K_8", KnKeycode::K_8)
        .value("K_9", KnKeycode::K_9)
        .value("K_COLON", KnKeycode::K_COLON)
        .value("K_SEMICOLON", KnKeycode::K_SEMICOLON)
        .value("K_LT", KnKeycode::K_LT)
        .value("K_EQ", KnKeycode::K_EQ)
        .value("K_GT", KnKeycode::K_GT)
        .value("K_QUESTION", KnKeycode::K_QUESTION)
        .value("K_AT", KnKeycode::K_AT)
        .value("K_LBRACKET", KnKeycode::K_LBRACKET)
        .value("K_BACKSLASH", KnKeycode::K_BACKSLASH)
        .value("K_RBRACKET", KnKeycode::K_RBRACKET)
        .value("K_CARET", KnKeycode::K_CARET)
        .value("K_UNDERSCORE", KnKeycode::K_UNDERSCORE)
        .value("K_GRAVE", KnKeycode::K_GRAVE)
        .value("K_a", KnKeycode::K_a)
        .value("K_b", KnKeycode::K_b)
        .value("K_c", KnKeycode::K_c)
        .value("K_d", KnKeycode::K_d)
        .value("K_e", KnKeycode::K_e)
        .value("K_f", KnKeycode::K_f)
        .value("K_g", KnKeycode::K_g)
        .value("K_h", KnKeycode::K_h)
        .value("K_i", KnKeycode::K_i)
        .value("K_j", KnKeycode::K_j)
        .value("K_k", KnKeycode::K_k)
        .value("K_l", KnKeycode::K_l)
        .value("K_m", KnKeycode::K_m)
        .value("K_n", KnKeycode::K_n)
        .value("K_o", KnKeycode::K_o)
        .value("K_p", KnKeycode::K_p)
        .value("K_q", KnKeycode::K_q)
        .value("K_r", KnKeycode::K_r)
        .value("K_s", KnKeycode::K_s)
        .value("K_t", KnKeycode::K_t)
        .value("K_u", KnKeycode::K_u)
        .value("K_v", KnKeycode::K_v)
        .value("K_w", KnKeycode::K_w)
        .value("K_x", KnKeycode::K_x)
        .value("K_y", KnKeycode::K_y)
        .value("K_z", KnKeycode::K_z)
        .value("K_LBRACE", KnKeycode::K_LBRACE)
        .value("K_PIPE", KnKeycode::K_PIPE)
        .value("K_RBRACE", KnKeycode::K_RBRACE)
        .value("K_TILDE", KnKeycode::K_TILDE)
        .value("K_DEL", KnKeycode::K_DEL)
        .value("K_CAPS", KnKeycode::K_CAPS)
        .value("K_F1", KnKeycode::K_F1)
        .value("K_F2", KnKeycode::K_F2)
        .value("K_F3", KnKeycode::K_F3)
        .value("K_F4", KnKeycode::K_F4)
        .value("K_F5", KnKeycode::K_F5)
        .value("K_F6", KnKeycode::K_F6)
        .value("K_F7", KnKeycode::K_F7)
        .value("K_F8", KnKeycode::K_F8)
        .value("K_F9", KnKeycode::K_F9)
        .value("K_F10", KnKeycode::K_F10)
        .value("K_F11", KnKeycode::K_F11)
        .value("K_F12", KnKeycode::K_F12)
        .value("K_PRTSCR", KnKeycode::K_PRTSCR)
        .value("K_SCRLK", KnKeycode::K_SCRLK)
        .value("K_PAUSE", KnKeycode::K_PAUSE)
        .value("K_INS", KnKeycode::K_INS)
        .value("K_HOME", KnKeycode::K_HOME)
        .value("K_PGUP", KnKeycode::K_PGUP)
        .value("K_END", KnKeycode::K_END)
        .value("K_PGDOWN", KnKeycode::K_PGDOWN)
        .value("K_RIGHT", KnKeycode::K_RIGHT)
        .value("K_LEFT", KnKeycode::K_LEFT)
        .value("K_DOWN", KnKeycode::K_DOWN)
        .value("K_UP", KnKeycode::K_UP)
        .value("K_NUMLOCK", KnKeycode::K_NUMLOCK)
        .value("K_KP_DIV", KnKeycode::K_KP_DIV)
        .value("K_KP_MULT", KnKeycode::K_KP_MULT)
        .value("K_KP_MINUS", KnKeycode::K_KP_MINUS)
        .value("K_KP_PLUS", KnKeycode::K_KP_PLUS)
        .value("K_KP_ENTER", KnKeycode::K_KP_ENTER)
        .value("K_KP_1", KnKeycode::K_KP_1)
        .value("K_KP_2", KnKeycode::K_KP_2)
        .value("K_KP_3", KnKeycode::K_KP_3)
        .value("K_KP_4", KnKeycode::K_KP_4)
        .value("K_KP_5", KnKeycode::K_KP_5)
        .value("K_KP_6", KnKeycode::K_KP_6)
        .value("K_KP_7", KnKeycode::K_KP_7)
        .value("K_KP_8", KnKeycode::K_KP_8)
        .value("K_KP_9", KnKeycode::K_KP_9)
        .value("K_KP_0", KnKeycode::K_KP_0)
        .value("K_KP_PERIOD", KnKeycode::K_KP_PERIOD)
        .value("K_AGAIN", KnKeycode::K_AGAIN)
        .value("K_UNDO", KnKeycode::K_UNDO)
        .value("K_CUT", KnKeycode::K_CUT)
        .value("K_COPY", KnKeycode::K_COPY)
        .value("K_PASTE", KnKeycode::K_PASTE)
        .value("K_FIND", KnKeycode::K_FIND)
        .value("K_MUTE", KnKeycode::K_MUTE)
        .value("K_VOLUP", KnKeycode::K_VOLUP)
        .value("K_VOLDOWN", KnKeycode::K_VOLDOWN)
        .value("K_LPAREN", KnKeycode::K_LPAREN)
        .value("K_RPAREN", KnKeycode::K_RPAREN)
        .value("K_LCTRL", KnKeycode::K_LCTRL)
        .value("K_LSHIFT", KnKeycode::K_LSHIFT)
        .value("K_LALT", KnKeycode::K_LALT)
        .value("K_LGUI", KnKeycode::K_LGUI)
        .value("K_RCTRL", KnKeycode::K_RCTRL)
        .value("K_RSHIFT", KnKeycode::K_RSHIFT)
        .value("K_RALT", KnKeycode::K_RALT)
        .value("K_RGUI", KnKeycode::K_RGUI)
        .export_values()
        .finalize();

    // Gamepad buttons
    py::native_enum<SDL_GamepadButton>(module, "GamepadButton", "enum.IntEnum")
        .value("C_SOUTH", SDL_GAMEPAD_BUTTON_SOUTH)
        .value("C_EAST", SDL_GAMEPAD_BUTTON_EAST)
        .value("C_WEST", SDL_GAMEPAD_BUTTON_WEST)
        .value("C_NORTH", SDL_GAMEPAD_BUTTON_NORTH)
        .value("C_BACK", SDL_GAMEPAD_BUTTON_BACK)
        .value("C_GUIDE", SDL_GAMEPAD_BUTTON_GUIDE)
        .value("C_START", SDL_GAMEPAD_BUTTON_START)
        .value("C_LSTICK", SDL_GAMEPAD_BUTTON_LEFT_STICK)
        .value("C_RSTICK", SDL_GAMEPAD_BUTTON_RIGHT_STICK)
        .value("C_LSHOULDER", SDL_GAMEPAD_BUTTON_LEFT_SHOULDER)
        .value("C_RSHOULDER", SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER)
        .value("C_DPAD_UP", SDL_GAMEPAD_BUTTON_DPAD_UP)
        .value("C_DPAD_DOWN", SDL_GAMEPAD_BUTTON_DPAD_DOWN)
        .value("C_DPAD_LEFT", SDL_GAMEPAD_BUTTON_DPAD_LEFT)
        .value("C_DPAD_RIGHT", SDL_GAMEPAD_BUTTON_DPAD_RIGHT)
        .export_values()
        .finalize();

    // Gamepad axes
    py::native_enum<SDL_GamepadAxis>(module, "GamepadAxis", "enum.IntEnum")
        .value("C_LX", SDL_GAMEPAD_AXIS_LEFTX)
        .value("C_LY", SDL_GAMEPAD_AXIS_LEFTY)
        .value("C_RX", SDL_GAMEPAD_AXIS_RIGHTX)
        .value("C_RY", SDL_GAMEPAD_AXIS_RIGHTY)
        .value("C_LTRIGGER", SDL_GAMEPAD_AXIS_LEFT_TRIGGER)
        .value("C_RTRIGGER", SDL_GAMEPAD_AXIS_RIGHT_TRIGGER)
        .export_values()
        .finalize();

    // Gamepad types
    py::native_enum<SDL_GamepadType>(module, "GamepadType", "enum.IntEnum")
        .value("C_STANDARD", SDL_GAMEPAD_TYPE_STANDARD)
        .value("C_XBOX_360", SDL_GAMEPAD_TYPE_XBOX360)
        .value("C_XBOX_ONE", SDL_GAMEPAD_TYPE_XBOXONE)
        .value("C_PS3", SDL_GAMEPAD_TYPE_PS3)
        .value("C_PS4", SDL_GAMEPAD_TYPE_PS4)
        .value("C_PS5", SDL_GAMEPAD_TYPE_PS5)
        .value("C_SWITCH_PRO", SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO)
        .value("C_SWITCH_JOYCON_LEFT", SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT)
        .value("C_SWITCH_JOYCON_RIGHT", SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT)
        .value("C_SWITCH_JOYCON_PAIR", SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR)
        .export_values()
        .finalize();
}
