name: Build Wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-15, ubuntu-latest]

    env:
      MACOSX_DEPLOYMENT_TARGET: "15.0"

    steps:
      - uses: actions/checkout@v4

      # ------------------ MacOS ------------------
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install sdl3 sdl3_image

      # ------------------ Windows ------------------
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $SDL_VERSION = "3.2.18"
          $SDL_IMAGE_VERSION = "3.2.4"

          # Download and extract SDL3
          Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL3-devel-$SDL_VERSION-VC.zip" -OutFile "sdl3.zip"
          Expand-Archive -Path "sdl3.zip" -DestinationPath "sdl3_temp"
          $SDL3_PATH = (Get-ChildItem -Path "sdl3_temp/SDL3-*" | Select-Object -First 1).FullName
          echo "SDL3_DIR=$SDL3_PATH/cmake" | Out-File -FilePath $env:GITHUB_ENV -Append
          Copy-Item "$SDL3_PATH/lib/x64/SDL3.dll" -Destination "src/pykraken/"

          # Download and extract SDL3_image
          Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL_image/releases/download/release-$SDL_IMAGE_VERSION/SDL3_image-devel-$SDL_IMAGE_VERSION-VC.zip" -OutFile "sdl3_image.zip"
          Expand-Archive -Path "sdl3_image.zip" -DestinationPath "sdl3_image_temp"
          $SDL_IMAGE_PATH = (Get-ChildItem -Path "sdl3_image_temp/SDL3_image-*" | Select-Object -First 1).FullName
          echo "SDL3_image_DIR=$SDL_IMAGE_PATH/cmake" | Out-File -FilePath $env:GITHUB_ENV -Append
          Copy-Item "$SDL_IMAGE_PATH/lib/x64/SDL3_image.dll" -Destination "src/pykraken/"

          # Add SDL3 bin to PATH for CMake find_package to work correctly
          echo "$SDL3_PATH/lib/x64" | Out-File -FilePath $env:GITHUB_PATH -Append

      # ------------------ Build Wheels ------------------
      - name: Install uv for speed
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Build and test wheels
        uses: pypa/cibuildwheel@v3.0.1
        env:
          # Use uv and build
          CIBW_BUILD_FRONTEND: "build[uv]"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_BUILD_VERBOSITY: 1
          # absolutely crucial, otherwise the build step doesn't know to include the SDL*.so files from here
          # cmake puts them in /usr/local/lib by default (on Linux) during the install step
          # since cibuildwheel runs in docker, it has no (direct) access to the files built on the host, so
          # we need to mount /usr/local explicitly (though it should be also somehow accessible through the
          # /host mount that cibuildwheel creates, but that doesn't want to work)
          CIBW_ENVIRONMENT_LINUX: >
            LD_LIBRARY_PATH="/usr/local/lib:/usr/local/lib64:${LD_LIBRARY_PATH}"
          CIBW_BEFORE_BUILD_LINUX: |
            export DIRECTORY=${PWD}
            export VENDORED_DIRECTORY=${DIRECTORY}/vendored
            mkdir ${VENDORED_DIRECTORY}

            export SDL_VERSION="3.2.18"
            export SDL_DIRECTORY=SDL3-${SDL_VERSION}
            export SDL_PATH=${VENDORED_DIRECTORY}/${SDL_DIRECTORY}

            export SDL_IMAGE_VERSION="3.2.4"
            export SDL_IMAGE_DIRECTORY=SDL3_image-${SDL_IMAGE_VERSION}
            export SDL_IMAGE_PATH=${VENDORED_DIRECTORY}/${SDL_IMAGE_DIRECTORY}

            # see https://github.com/libsdl-org/SDL/blob/main/docs/README-linux.md#build-dependencies
            yum install -y gcc git-core make cmake \
                alsa-lib-devel pulseaudio-libs-devel nas-devel pipewire-devel \
                libX11-devel libXext-devel libXrandr-devel libXcursor-devel libXfixes-devel \
                libXi-devel libXScrnSaver-devel dbus-devel ibus-devel \
                systemd-devel mesa-libGL-devel libxkbcommon-devel mesa-libGLES-devel \
                mesa-libEGL-devel vulkan-devel wayland-devel wayland-protocols-devel \
                libdrm-devel mesa-libgbm-devel libusb-devel libdecor-devel \
                pipewire-jack-audio-connection-kit-devel

            yum install -y gcc g++ wget ca-certificates cmake

            yum search wget
            yum list wget
            yum info wget
            yum install -y wget

            wget https://github.com/libsdl-org/SDL/releases/download/release-${SDL_VERSION}/${SDL_DIRECTORY}.tar.gz -O /tmp/SDL.tar.gz \
                && tar -xvzf /tmp/SDL.tar.gz --directory=${VENDORED_DIRECTORY} \
                && cmake -S ${SDL_PATH} -B ${SDL_PATH}/build -DCMAKE_BUILD_TYPE=Release \
                && cmake --build ${SDL_PATH}/build -j$(nproc) \
                && cmake --install ${SDL_PATH}/build

            wget https://github.com/libsdl-org/SDL_image/releases/download/release-${SDL_IMAGE_VERSION}/${SDL_IMAGE_DIRECTORY}.tar.gz -O /tmp/SDL_image.tar.gz \
                && tar -xvzf /tmp/SDL_image.tar.gz --directory=${VENDORED_DIRECTORY} \
                && cmake -S ${SDL_IMAGE_PATH} -B ${SDL_IMAGE_PATH}/build -DCMAKE_BUILD_TYPE=Release \
                && cmake --build ${SDL_IMAGE_PATH}/build -j$(nproc) \
                && cmake --install ${SDL_IMAGE_PATH}/build

            rm -rf ${VENDORED_DIRECTORY}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          compression-level: 0
